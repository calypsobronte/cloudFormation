---
Parameters:
  EnvironmentType:
    Description: Environment Name
    Type: String
    AllowedValues: [production, development]
    ConstraintDescription: only can be development or production

Mappings:
  RegionMap: 
    us-east-1:
      HVM64: ami-0ff8a91507f77f867
      HVMG2: ami-0a584ac55a7631c0c
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      HVM64: ami-047bb4163c506cd98
      HVMG2: ami-0a7c483d527806435
    ap-northeast-1:
      HVM64: ami-06cd52961ce9f0d85
      HVMG2: ami-053cdd503598e4a9d
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309
  InstanceTypeEnvironment:
    production:
      instanceType: t2.small
    development:
      instanceType: t2.micro

Resources:
  InstanceMainEC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !FindInMap [InstanceTypeEnvironment, !Ref 'EnvironmentType', instanceType]

  SubInstance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !FindInMap [InstanceTypeEnvironment, !Ref 'EnvironmentType', instanceType]
    DependsOn: InstanceMainEC2

  SubInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !FindInMap [InstanceTypeEnvironment, !Ref 'EnvironmentType', instanceType]
    DependsOn: InstanceMainEC2

# Combinacion de mapeo de regiones ma definicion de imagenes y tipo de instancia
# donde creamos un template donde se cree una instancia y de esta se cree sub instancias

# La instancia principal se crea primero, seguida de las subinstancias. La propiedad "DependsOn" 
# especifica que las subinstancias dependen de la instancia principal. Esto garantiza que la instancia principal se cree antes de las subinstancias